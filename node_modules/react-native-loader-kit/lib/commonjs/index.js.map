{"version":3,"sources":["index.tsx"],"names":["LINKING_ERROR","Platform","select","ios","default","ComponentName","LoaderKitNative","LoaderKit","props","color","propTypes","name","PropTypes","oneOf","animations","string","UIManager","getViewManagerConfig","Error"],"mappings":";;;;;;;;;;;;;AAAA;;AAOA;;AACA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAChB,kFAAD,GACAC,sBAASC,MAAT,CAAgB;AAAEC,EAAAA,GAAG,EAAE,gCAAP;AAAyCC,EAAAA,OAAO,EAAE;AAAlD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAkBA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,eAAe,GACnB,yCAA6CD,aAA7C,CADF;;AAGA,MAAME,SAAS,GAAIC,KAAD,IAA2B;AAC3C,sBAAO,6BAAC,eAAD,eAAqBA,KAArB;AAA4B,IAAA,KAAK,EAAE,+BAAaA,KAAK,CAACC,KAAnB;AAAnC,KAAP;AACD,CAFD;;AAIAF,SAAS,CAACG,SAAV,GAAsB;AACpBC,EAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC,mBAAhB,CADc;AAEpBL,EAAAA,KAAK,EAAEG,mBAAUG;AAFG,CAAtB;;eAKeC,uBAAUC,oBAAV,CAA+BZ,aAA/B,KAAiD,IAAjD,GACXE,SADW,GAEX,MAAM;AACJ,QAAM,IAAIW,KAAJ,CAAUlB,aAAV,CAAN;AACD,C","sourcesContent":["import {\n  requireNativeComponent,\n  UIManager,\n  Platform,\n  processColor,\n  ViewProps,\n} from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport animations from './animations';\n\nconst LINKING_ERROR =\n  `The package 'react-native-loader-kit' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\ninterface BaseProps extends ViewProps {\n  name?: string;\n}\n\ninterface LoaderKitProps extends BaseProps {\n  color?: string;\n}\n\ninterface LoaderKitNativeProps extends BaseProps {\n  color?: number;\n}\n\nconst ComponentName = 'LoaderKitView';\nconst LoaderKitNative =\n  requireNativeComponent<LoaderKitNativeProps>(ComponentName);\n\nconst LoaderKit = (props: LoaderKitProps) => {\n  return <LoaderKitNative {...props} color={processColor(props.color)} />;\n};\n\nLoaderKit.propTypes = {\n  name: PropTypes.oneOf(animations),\n  color: PropTypes.string,\n};\n\nexport default UIManager.getViewManagerConfig(ComponentName) != null\n  ? LoaderKit\n  : () => {\n      throw new Error(LINKING_ERROR);\n    };\nexport { animations };\n"]}