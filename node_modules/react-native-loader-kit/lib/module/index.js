function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { requireNativeComponent, UIManager, Platform, processColor } from 'react-native';
import React from 'react';
import PropTypes from 'prop-types';
import animations from './animations';
const LINKING_ERROR = `The package 'react-native-loader-kit' doesn't seem to be linked. Make sure: \n\n` + Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo managed workflow\n';
const ComponentName = 'LoaderKitView';
const LoaderKitNative = requireNativeComponent(ComponentName);

const LoaderKit = props => {
  return /*#__PURE__*/React.createElement(LoaderKitNative, _extends({}, props, {
    color: processColor(props.color)
  }));
};

LoaderKit.propTypes = {
  name: PropTypes.oneOf(animations),
  color: PropTypes.string
};
export default UIManager.getViewManagerConfig(ComponentName) != null ? LoaderKit : () => {
  throw new Error(LINKING_ERROR);
};
export { animations };
//# sourceMappingURL=index.js.map